<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Deep learning | Rohan Garg</title><link>https://Sandstorm831.github.io/tag/deep-learning/</link><atom:link href="https://Sandstorm831.github.io/tag/deep-learning/index.xml" rel="self" type="application/rss+xml"/><description>Deep learning</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Mon, 31 May 2021 00:00:00 +0000</lastBuildDate><image><url>https://Sandstorm831.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url><title>Deep learning</title><link>https://Sandstorm831.github.io/tag/deep-learning/</link></image><item><title>ResNet-50</title><link>https://Sandstorm831.github.io/post/part_resnet50/</link><pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate><guid>https://Sandstorm831.github.io/post/part_resnet50/</guid><description>&lt;p>ResNet-50 is a pretrained convolutional neural network that is trained on over a million images from the ImageNet database. It has 177 layers with 192 connections. It can classify images in 1000 categorical outputs. It has an input image size of 224 x 224 x 3.&lt;/p>
&lt;p>&lt;a href="https://gargrohan138.medium.com/resnet-50-810cf6f02799" target="_blank" rel="noopener">Read more here&lt;/a>&lt;/p></description></item><item><title>Optimizers: diving deep into Neural Networks</title><link>https://Sandstorm831.github.io/post/getting-started/</link><pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate><guid>https://Sandstorm831.github.io/post/getting-started/</guid><description>&lt;p>Waiting for neural networks to train is always the most annoying time and even more annoying when the datasets are large. Indeed, changing the optimization algorithm may bring a significant change in speed as well as accuracy for the deep learning model training.&lt;/p>
&lt;p>&lt;a href="https://medium.com/vlgiitr/optimizer-diving-into-deep-neural-networks-94a6ee28f7c5" target="_blank" rel="noopener">Read more here&lt;/a>&lt;/p></description></item><item><title>Password Cracking</title><link>https://Sandstorm831.github.io/post/password/</link><pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate><guid>https://Sandstorm831.github.io/post/password/</guid><description>&lt;p>There are several algorithms that decrypt the hashes of the passwords obtained from other password databases leaks. These algorithms generate passwords, hashes them using the encryption algorithm, and then compare the hash with the hashes present in the database; if the hash matches, Bingo! We got the password corresponding to that hash; otherwise, keep generating and comparing passwords.&lt;/p>
&lt;p>&lt;a href="https://gargrohan138.medium.com/password-cracking-1b14e0844404" target="_blank" rel="noopener">Read more here&lt;/a>&lt;/p></description></item><item><title>Deep-Dreams</title><link>https://Sandstorm831.github.io/project/deepdream/</link><pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate><guid>https://Sandstorm831.github.io/project/deepdream/</guid><description/></item><item><title>Pathological-classification-model</title><link>https://Sandstorm831.github.io/project/pathologclasify/</link><pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate><guid>https://Sandstorm831.github.io/project/pathologclasify/</guid><description/></item></channel></rss>